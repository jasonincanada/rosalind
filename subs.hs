{- Rosalind

   Problem: SUBS - Combing through the haystack
   URL:     http://rosalind.info/problems/subs/
-}

import Data.List (isPrefixOf, intercalate)

process :: Eq a => [a] -> [a] -> [Int]
process []       _    = []
process haystack needle = go 1 haystack
  where
    go n []  = []
    go n hay = if isPrefixOf needle hay
               then n : go (n+1) (tail hay)
               else     go (n+1) (tail hay)

main = do
  let haystack = "AGGAAGCAGGTACGGCAGGTAGAGCAGGTACGGCAGGTAACCTAGCAGGTAGGCAGGTAGATTTGCAGGTACTGTTCCAATTGCAGGTATCCGGTAAGGTTGCAGGTATGCAGGTAGCAGGTACGGAGTGCAGGTATCTACCGGCAGGTAACCCAATGCAGGTACGCAGGTACTGCAGGTACCTGAGCAGGTAGGCAGGTATAGGCAGGTATAGCAGGTAGCAGGTAAGCGCAGGTAGCAGGTAAGGCAGGTAGGCAGGTAGCAGGTAACGCAGGTAGCAGGTACGGCAGGTAGTTTCTTGCAGGTAAATGATCCAGCAGGTACGCCAGGTGCAGGTATAAGTGCAGGTATAGAGCAGGTATGCGTGATAGGGTGCAGGTAAGGCAGGTAGTGCAGGTAGCAGGTATTGCAGGTAGGCAGGTAATACTGCAGGTACGCAGGTATTGCAGGTAGAGCAGGTAGAGAGCAGGTAACGCAGGTAGCAGGTATGCAGGTAGCAGGTAAGAGCAGGTAGTCCAACTAGAAGCAGGTAACAGCAGGTAGCAGGTATGCAGGTATAAGGCAGGTACGCAGGTAGCAGGTAAAGCAGGTATATGGCAGGTATTGTTGGCAGGTAAACTGACCGCAGGTAGCAGGTATTACGCAGGTAGCAGGTACCGCAGGTAGCAGGTACTTCTAAGCAGGTAATGCAGGTAAGCGCAGGTACAAGCAGGTAGTCGTACGTGGCAGGTAGTGCCAAGCAGGTAGCAGGTAGCAGGTAGCCGCCTGCAGGTAGCAGGTAATAGCAGGTAGCAGGTATGCAGGTACTGCAGGTAGCAGGTATGCAGGTAAA"
  let needle = "GCAGGTAGC"
  let indices = process haystack needle
  print $ intercalate " " $ map show indices
  
