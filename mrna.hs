{- Rosalind

   Code:    MRNA
   Problem: Inferring mRNA from Protein
   URL:     http://rosalind.info/problems/mrna/
-}

import Data.List (nub)
import Codons (Codon, Amino, table)

-- Flip the codon table so we have the number of codons for each amino acid
flipcount :: [(Codon, Amino)] -> [(Amino, Int)]
flipcount cs = map (\a -> (a, count a)) aminos
  where
    aminos = nub $ map snd cs
    count a = length $ filter ((==a) . snd) cs

process :: [(Amino, Int)] -> String -> Int
process counts protein = foldr f 3 protein
  where
    f amino n = case lookup amino counts of
                  Nothing -> error $ "Don't know amino code " ++ [amino]
                  Just x  -> (n * x) `mod` 1000000

main = do
  let protein = "MGQHGMNAGFVDSHPPSCEWWCRYMWKGFSMARLHAIFIGIMDFPRWKQYNECRKRSPVIVNEVDDELMPPDIYHCLVCNCTCHTPYSKYNRPWTKYWKFICRQSEVHWEDAEEVARCNVGLGPQLWKVRYQLPFGSWTFGTPNAIWPCRCRPAHYFVQHAGKFENSKWLGWRWNYIIRTFGVRTKNSRHILVKAAPQENEGMHCQNSSNSREKQDPTYHKMDFEFDKALMVQGLIWWAIFRKMRPKRQGLIMNVMIAYVPDPYSPGWSPFCMKAMQNTHDECAQQQLLNGANGNGCWQITYPWSWVNTRKVYMLKESYRVWQRVVKAHFFQPEAKWHVMNAYKVTMLYLCIVVKLATHKQRILNWWRENKWSRSYVVPRYILHTHNPWNGVHCLTVCDLIHRDIHHNTKENWMSQDNTIPGQFYNQHLFKNRAIRMAHPDQYTEARGGNFDWVFCQSGEKIHWYYKFLGFHKSQPPMTMWKCTSGFGWPVKVVWFWNTRRFWHCYLWWSHPWNFGLYLLCRLMMGIMLSFRHERTLMGELEKYTEFWVCSINLDINTFSTTVRTKTFHHKPDTVAQATAVGTGDRGGFEDLMTHKINDAWGYCMERFTCEPMQWRFNMLWKCDHCWDATLIDWFSADGIWGWWHQTSHAMPRMSGHRISTHQNSESCIKRLMDAKAFNVRFGQVDLHQFQDLWTGCRGDSPLLFWLDGPHYHPTLWMCRMPSCSLVVHFVIAPAHTMTPYPWGPLNSAHSGQVLCWKRPGVNESADMCLQNVPPHYYHPCIGCLCEWQDHFTALCNLSPHIKHVHIPCADKSHCHCHKELKTTATFMWCGGPAQNFTEPEVHHSTPNRPTHRGQDQDAITCVENPMNHFMQPSSVKRSNPHVDMVVHWPPVTQNYYWPNAFRMSQYFRQQPSMFHHCDHSHKMGMWDAWHNELGAFLQIHRTWEGKGMLECGYFECFALQEQLVGQQTDFMNLRSQNLFRPNDQRCFYVTTWHHWRQ"
  let flipped = flipcount table
  print $ process flipped protein

